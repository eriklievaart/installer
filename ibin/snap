#!/bin/sh
cache=/tmp/snap/cache
[ -d $cache ] || $IBIN/util/displays

wmctrl -r :ACTIVE: -b remove,fullscreen
wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz;

# current location of window
id=$(xdotool getactivewindow)
lines=$(xwininfo -id $id | grep 'Absolute\|Width\|Height')
borders=$(xprop _NET_FRAME_EXTENTS -id $id | grep "NET_FRAME_EXTENTS" | sed 's/,//g;s/[^0-9]*//')
x=$(( $(echo "$lines" | sed -r -n '/.*X:/{s/[^0-9]*//;p}') - $(echo "$borders" | cut -d " " -f 1) ))
y=$(( $(echo "$lines" | sed -r -n '/.*Y:/{s/[^0-9]*//i;p}') - $(echo "$borders" | cut -d " " -f 3) ))
w=$(( $(echo "$lines" | sed -r -n '/.*Width/{s/[^0-9]*//;p}') + $(echo "$borders" | cut -d " " -f 1) + $(echo "$borders" | cut -d " " -f 2) ))
h=$(( $(echo "$lines" | sed -r -n '/.*Height/{s/[^0-9]*//;p}' ) + $(echo "$borders" | cut -d " " -f 3) + $(echo "$borders" | cut -d " " -f 4) ))
midx=$(( $w / 2 + $x ))
echo "window $x $y $w $h midx$midx"

# determine current display of window
display=1
displaymax=$(ls $cache/display* | wc -w)
while [ "${display?}" -lt $displaymax ]; do
	. "$cache/display$display"
	if [ $midx -ge $dx -a $midx -lt $(($dx + $dw)) ]; then
		break
	fi
	display=$(( $display + 1 ))
done

# calculate new position
property=""
translate() {
	echo "x=$x;y=$y;w=$w;h=$h;dx=$dx;dy=$dy;dw=$dw;dh=$dh;$1" | bc
}
set -- $(getopt "pnfm" "$@")
while [ "$1" ]; do
	case "$1" in
		-n) display=$(echo "d=$display + 1; if(d > ${displaymax?}) 1 else d" | bc);;
		-f) property=fullscreen;;
		-m) property=maximized_vert,maximized_horz;;
		--) . "$cache/display${display?}";;
		x=*) x=$(translate $(echo "$1" | cut -c "3-"));;
		y=*) y=$(translate $(echo "$1" | cut -c "3-"));;
		w=*) w=$(translate $(echo "$1" | cut -c "3-"));;
		h=*) h=$(translate $(echo "$1" | cut -c "3-"));;
		*) echo "invalid input $1"; exit 255;;
	esac
	shift
done

# respect display bounds
echo "moving $x $y $w $h @ display $display ($dx $dy $dw $dh)"
x=$(echo "if($x < $dx) $dx else if($x >= $dx+$dw) $dx else $x" | bc)
y=$(echo "if($y < $dy) $dy else if($y >= $dy+$dh) $dy else $y" | bc)
w=$(echo "if($w > $dw) $dw else $w" | bc)
h=$(echo "if($h > $dh) $dh else $h" | bc)
echo "fixed: $x $y $w $h"

# relocate window
wmctrl -r :ACTIVE: -e "0,$x,$y,$w,$h"
if [ "$property" ]; then
	wmctrl -r :ACTIVE: -b add,"$property"
fi
